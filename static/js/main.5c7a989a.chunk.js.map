{"version":3,"sources":["reportWebVitals.js","redux/slices/setCurrentArray.js","redux/slices/setCurrentTimeSpeed.js","redux/slices/index.js","redux/store.js","constants/index.js","components/SortingVisualier.js","hooks/useClickOutside.js","assets/img/chart.svg","helpers/sleep.js","helpers/changeColorAnimation.js","helpers/finishedSort.js","helpers/getValueBar.js","helpers/swapHeightNormal.js","helpers/swapHeight.js","helpers/swapContentNormal.js","helpers/swapContent.js","algorithms/insertionSort.js","algorithms/bubbleSort.js","algorithms/heapSort.js","algorithms/shellSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","components/NavBar.js","helpers/randomIntFromInterval.js","assets/img/github.svg","components/Footer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setCurrentArray","createSlice","name","initialState","currentArray","reducers","updateArray","state","action","payload","actions","setCurrentArraySelector","setCurrentTimeSpeed","currentTime","updateTime","setCurrentTimeSpeedSelector","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","TIME_SPEED","PRIMARY_COLOR","SECONDARY_COLOR","THIRST_COLOR","CORLOR_RUN","YELLOW_COLOR","ORANGE_COLOR","PINK_COLOR","QUICK_SORT","HEAP_SORT","SELECT_SORT","BUBBLE_SORT","MERGED_SORT","INSERT_SORT","SHELL_SORT","LIST_ALGORITHM","id","type","SPEED_SLOW","SPEED_NORMAL","SPEED_MEDIUM","SPEED_FAST","SPEED_SUPER_FAST","SPEEDS","SortingVisualier","amountArray","useSelector","numWidth","Math","floor","document","body","clientWidth","length","width","color","className","map","value","index","style","backgroundColor","height","margin","useClickOutside","ref","callback","handleClick","e","current","contains","target","React","useEffect","addEventListener","removeEventListener","sleep","ms","Promise","resolve","setTimeout","changeColorAnimation","arr","i","a","finishedSort","bars","k","getValueBar","heightString","heightConvert","slice","Number","swapHeightNormal","j","temp","swapHeight","swapContentNormal","children","innerText","swapContent","insertionSort","time","querySelectorAll","heightElement","childNodes","innerHTML","bubbleSort","x","y","all","heapify","n","largest","r","l","heapSort","shellSort","size","temp1","temp2","selectionSort","minIndex","val1","val2","partition","start","end","poviotValues","currentBar","background","quickSort","position","doMerge","middleIndex","n1","n2","L","R","parseInt","mergeSort","NavBar","useState","showDropdown","setShowDropdown","showSpeed","setShowSpeed","disable","setDisable","setValue","typeAlgorithm","setTypeAlgorithm","typeSpeed","setTypeSpeed","currentTimeSpeed","dispatch","useDispatch","dropdownRef","useRef","speedRef","onResetColorBar","initCurrentBars","min","max","array","push","clientHeight","random","actionSort","src","ChartIcon","alt","onClick","step","onChange","algorithm","speed","Footer","href","GithubIcon","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c7a989a.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry)\r\n            getFID(onPerfEntry)\r\n            getFCP(onPerfEntry)\r\n            getLCP(onPerfEntry)\r\n            getTTFB(onPerfEntry)\r\n        })\r\n    }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst setCurrentArray = createSlice({\r\n    name: 'setCurrentArray',\r\n    initialState: {\r\n        currentArray: [],\r\n    },\r\n    reducers: {\r\n        updateArray: (state, action) => {\r\n            state.currentArray = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { updateArray } = setCurrentArray.actions\r\nexport const setCurrentArraySelector = (state) => state.setCurrentArray.currentArray\r\nexport default setCurrentArray.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst setCurrentTimeSpeed = createSlice({\r\n    name: 'setCurrentTimeSpeed',\r\n    initialState: {\r\n        currentTime: 200,\r\n    },\r\n    reducers: {\r\n        updateTime: (state, action) => {\r\n            state.currentTime = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { updateTime } = setCurrentTimeSpeed.actions\r\nexport const setCurrentTimeSpeedSelector = (state) =>\r\n    state.setCurrentTimeSpeed.currentTime\r\nexport default setCurrentTimeSpeed.reducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport setCurrentArray from './setCurrentArray'\r\nimport setCurrentTimeSpeed from './setCurrentTimeSpeed'\r\n\r\nconst rootReducer = combineReducers({\r\n    setCurrentArray,\r\n    setCurrentTimeSpeed,\r\n})\r\n\r\nexport default rootReducer\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport rootReducer from './slices'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store\r\n","export const TIME_SPEED = 200\r\nexport const TIME_SPEED_SLOW = 500\r\nexport const TIME_SPEED_NORMAL = 200\r\nexport const TIME_SPEED_MEDIUM = 100\r\nexport const TIME_SPEED_FAST = 50\r\nexport const TIME_SPEED_SUPER_FAST = 20\r\n\r\n// This is the main color of the array bars.\r\nexport const PRIMARY_COLOR = 'turquoise'\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nexport const SECONDARY_COLOR = 'Crimson'\r\n// Color after sorted\r\nexport const THIRST_COLOR = 'rgb(0, 250, 154)' /* MediumSpringGreen */\r\n\r\nexport const CORLOR_RUN = 'DarkSlateBlue'\r\n\r\nexport const YELLOW_COLOR = 'yellow'\r\nexport const ORANGE_COLOR = 'orange'\r\nexport const PINK_COLOR = 'pink'\r\n\r\nexport const QUICK_SORT = 'Quick Sort'\r\nexport const HEAP_SORT = 'Heap Sort'\r\nexport const SELECT_SORT = 'Select Sort'\r\nexport const BUBBLE_SORT = 'Bubble Sort'\r\nexport const MERGED_SORT = 'Merged Sort'\r\nexport const INSERT_SORT = 'Insert Sort'\r\nexport const SHELL_SORT = 'Shell Sort'\r\nexport const LIST_ALGORITHM = [\r\n    {\r\n        id: 1,\r\n        type: QUICK_SORT,\r\n    },\r\n    {\r\n        id: 2,\r\n        type: MERGED_SORT,\r\n    },\r\n    {\r\n        id: 3,\r\n        type: SELECT_SORT,\r\n    },\r\n    {\r\n        id: 4,\r\n        type: BUBBLE_SORT,\r\n    },\r\n    {\r\n        id: 5,\r\n        type: HEAP_SORT,\r\n    },\r\n    {\r\n        id: 6,\r\n        type: INSERT_SORT,\r\n    },\r\n    {\r\n        id: 7,\r\n        type: SHELL_SORT,\r\n    },\r\n]\r\nexport const SPEED_SLOW = 'Slow'\r\nexport const SPEED_NORMAL = 'Normal'\r\nexport const SPEED_MEDIUM = 'Medium'\r\nexport const SPEED_FAST = 'Fast'\r\nexport const SPEED_SUPER_FAST = 'Super fast'\r\nexport const SPEEDS = [\r\n    {\r\n        id: 1,\r\n        type: SPEED_SLOW,\r\n    },\r\n    {\r\n        id: 2,\r\n        type: SPEED_NORMAL,\r\n    },\r\n    {\r\n        id: 3,\r\n        type: SPEED_MEDIUM,\r\n    },\r\n    {\r\n        id: 4,\r\n        type: SPEED_FAST,\r\n    },\r\n    {\r\n        id: 5,\r\n        type: SPEED_SUPER_FAST,\r\n    },\r\n]\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { PRIMARY_COLOR } from '../constants'\r\nimport { setCurrentArraySelector } from '../redux/slices/setCurrentArray'\r\nimport './SortingVisualier.css'\r\n\r\nfunction SortingVisualier() {\r\n    const amountArray = useSelector(setCurrentArraySelector)\r\n\r\n    const numWidth = Math.floor(document.body.clientWidth / (amountArray.length * 3))\r\n    const width = `${numWidth * 2}px`\r\n    const color = numWidth > 20 ? 'white' : 'transparent'\r\n\r\n    return (\r\n        <>\r\n            <div className=\"data-container\">\r\n                {amountArray.map((value, index) => (\r\n                    <div\r\n                        className=\"bar\"\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={index}\r\n                        style={{\r\n                            backgroundColor: PRIMARY_COLOR,\r\n                            height: `${value}px`,\r\n                            margin: '0 0 0 2px',\r\n                            width,\r\n                        }}\r\n                    >\r\n                        <span style={{ color }}>{value}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SortingVisualier\r\n","import React from 'react'\r\n\r\nconst useClickOutside = (ref, callback) => {\r\n    const handleClick = (e) => {\r\n        if (ref.current && !ref.current.contains(e.target)) {\r\n            callback()\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => {\r\n            document.removeEventListener('click', handleClick)\r\n        }\r\n    })\r\n}\r\n\r\nexport default useClickOutside\r\n","export default __webpack_public_path__ + \"static/media/chart.b211f0fb.svg\";","export default function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n","import sleep from './sleep'\r\nimport { TIME_SPEED } from '../constants'\r\n\r\nexport default async function changeColorAnimation(arr, i, color, ms = TIME_SPEED) {\r\n    arr[i].style.backgroundColor = color\r\n    await sleep(ms)\r\n}\r\n","import { PRIMARY_COLOR } from '../constants'\r\nimport changeColorAnimation from './changeColorAnimation'\r\n\r\nexport default async function finishedSort(bars, ms) {\r\n    for (let k = 0; k < bars.length; k++) {\r\n        await changeColorAnimation(bars, k, PRIMARY_COLOR, ms)\r\n    }\r\n}\r\n","export default function getValueBar(arr, i) {\r\n    const heightString = arr[i].style.height\r\n    /**\r\n     * @NOTE: slice \"px\"\r\n     */\r\n    const heightConvert = heightString.slice(0, heightString.length - 2)\r\n    return Number(heightConvert)\r\n}\r\n","export default function swapHeightNormal(arr, i, j) {\r\n    const temp = arr[i].style.height\r\n    arr[i].style.height = arr[j].style.height\r\n    arr[j].style.height = temp\r\n}\r\n","import { TIME_SPEED } from '../constants'\r\nimport sleep from './sleep'\r\n\r\nexport default async function swapHeight(arr, i, j, ms = TIME_SPEED) {\r\n    const temp = arr[i].style.height\r\n    arr[i].style.height = arr[j].style.height\r\n    arr[j].style.height = temp\r\n    await sleep(ms)\r\n}\r\n","export default function swapContentNormal(arr, i, j) {\r\n    const temp = arr[i].children[0].innerText\r\n    arr[i].children[0].innerText = arr[j].children[0].innerText\r\n    arr[j].children[0].innerText = temp\r\n}\r\n","import { TIME_SPEED } from '../constants'\r\nimport sleep from './sleep'\r\n\r\nexport default async function swapContent(arr, i, j, ms = TIME_SPEED) {\r\n    const temp = arr[i].children[0].innerText\r\n    arr[i].children[0].innerText = arr[j].children[0].innerText\r\n    arr[j].children[0].innerText = temp\r\n    await sleep(ms)\r\n}\r\n","import { CORLOR_RUN, PINK_COLOR, THIRST_COLOR } from '../constants'\r\nimport { changeColorAnimation, finishedSort, getValueBar } from '../helpers'\r\n\r\nconst insertionSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n\r\n    await changeColorAnimation(bars, 0, THIRST_COLOR, time)\r\n\r\n    for (let i = 1; i < bars.length; i++) {\r\n        const key = getValueBar(bars, i)\r\n\r\n        const heightElement = bars[i].style.height\r\n        let j = i - 1\r\n\r\n        await changeColorAnimation(bars, i, CORLOR_RUN, time)\r\n\r\n        while (j >= 0 && getValueBar(bars, j) > key) {\r\n            await changeColorAnimation(bars, j, CORLOR_RUN, 100)\r\n\r\n            bars[j + 1].children[0].innerText = getValueBar(bars, j)\r\n            bars[j + 1].style.height = bars[j].style.height\r\n\r\n            j -= 1\r\n\r\n            for (let k = i; k >= 0; k--) {\r\n                bars[k].style.backgroundColor = PINK_COLOR\r\n            }\r\n        }\r\n\r\n        bars[j + 1].style.height = heightElement\r\n        bars[j + 1].childNodes[0].innerHTML = key\r\n\r\n        await changeColorAnimation(bars, i, THIRST_COLOR, time)\r\n        if (i === bars.length - 1) {\r\n            for (let k = i; k >= 0; k--) {\r\n                await changeColorAnimation(bars, k, THIRST_COLOR, time)\r\n            }\r\n        }\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\n\r\nexport default insertionSort\r\n","import { CORLOR_RUN, PINK_COLOR, THIRST_COLOR } from '../constants'\r\nimport {\r\n    changeColorAnimation,\r\n    finishedSort,\r\n    getValueBar,\r\n    swapContent,\r\n    swapHeight,\r\n} from '../helpers'\r\n\r\nconst bubbleSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n\r\n    for (let i = 0; i < bars.length - 1; i++) {\r\n        for (let j = 0; j < bars.length - i - 1; j++) {\r\n            const x = getValueBar(bars, j)\r\n            const y = getValueBar(bars, j + 1)\r\n            await Promise.all([\r\n                changeColorAnimation(bars, j, CORLOR_RUN, time),\r\n                changeColorAnimation(bars, j + 1, CORLOR_RUN, time),\r\n            ])\r\n            if (y < x) {\r\n                await Promise.all([\r\n                    swapHeight(bars, j, j + 1, time),\r\n                    swapContent(bars, j, j + 1, time),\r\n                ])\r\n            }\r\n            await Promise.all([\r\n                changeColorAnimation(bars, j, PINK_COLOR, time),\r\n                changeColorAnimation(bars, j + 1, PINK_COLOR, time),\r\n            ])\r\n        }\r\n        await changeColorAnimation(bars, bars.length - i - 1, THIRST_COLOR, time)\r\n        if (bars.length - i - 1 === 1) {\r\n            await changeColorAnimation(bars, 0, THIRST_COLOR, time)\r\n        }\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\nexport default bubbleSort\r\n","import {\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    SECONDARY_COLOR,\r\n    THIRST_COLOR,\r\n} from '../constants'\r\nimport {\r\n    changeColorAnimation,\r\n    finishedSort,\r\n    getValueBar,\r\n    swapContent,\r\n    swapHeight,\r\n} from '../helpers'\r\n\r\nconst heapify = async (arr, n, i, time) => {\r\n    let largest = i\r\n    const l = 2 * i + 1\r\n    const r = 2 * i + 2\r\n\r\n    if (l < n && getValueBar(arr, l) > getValueBar(arr, largest)) {\r\n        largest = l\r\n    }\r\n\r\n    if (r < n && getValueBar(arr, r) > getValueBar(arr, largest)) {\r\n        largest = r\r\n    }\r\n\r\n    if (largest !== i) {\r\n        await Promise.all([\r\n            changeColorAnimation(arr, i, ORANGE_COLOR, time),\r\n            swapHeight(arr, i, largest, time),\r\n            swapContent(arr, i, largest, time),\r\n            heapify(arr, n, largest, time),\r\n        ])\r\n    }\r\n\r\n    arr[largest].style.backgroundColor = SECONDARY_COLOR\r\n}\r\n\r\nconst heapSort = async (time) => {\r\n    const arr = document.querySelectorAll('.bar')\r\n    const n = arr.length\r\n\r\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n        await changeColorAnimation(arr, i, PINK_COLOR, time)\r\n        await heapify(arr, n, i)\r\n    }\r\n\r\n    for (let i = n - 1; i > 0; i--) {\r\n        await changeColorAnimation(arr, i, THIRST_COLOR, time)\r\n        await Promise.all([\r\n            swapHeight(arr, 0, i, time),\r\n            swapContent(arr, 0, i, time),\r\n            heapify(arr, i, 0, time),\r\n        ])\r\n    }\r\n    arr[0].style.backgroundColor = THIRST_COLOR\r\n    await finishedSort(arr, 100)\r\n}\r\nexport default heapSort\r\n","import {\r\n    CORLOR_RUN,\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    PRIMARY_COLOR,\r\n    THIRST_COLOR,\r\n} from '../constants'\r\nimport { changeColorAnimation, finishedSort, getValueBar } from '../helpers'\r\n\r\nconst shellSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n\r\n    const size = bars.length\r\n\r\n    for (let i = Math.floor(size / 2); i > 0; i = Math.floor(i / 2)) {\r\n        for (let j = i; j < size; j++) {\r\n            const temp = getValueBar(bars, j)\r\n            let k\r\n            const temp1 = bars[j].style.height\r\n            const temp2 = getValueBar(bars, j)\r\n\r\n            await changeColorAnimation(bars, j, CORLOR_RUN, time)\r\n\r\n            for (k = j; k >= i && getValueBar(bars, k - i) > temp; k -= i) {\r\n                bars[k].style.height = bars[k - i].style.height\r\n\r\n                bars[k].childNodes[0].innerText = bars[k - i].childNodes[0].innerText\r\n                await changeColorAnimation(bars, k, ORANGE_COLOR, time)\r\n            }\r\n            bars[j].style.backgroundColor = PINK_COLOR\r\n\r\n            bars[k].style.height = temp1\r\n            bars[k].childNodes[0].innerText = temp2\r\n\r\n            await Promise.all([\r\n                changeColorAnimation(bars, j, PINK_COLOR, time),\r\n                changeColorAnimation(bars, k, PRIMARY_COLOR, time),\r\n            ])\r\n        }\r\n    }\r\n    for (let x = 0; x < size; x++) {\r\n        await changeColorAnimation(bars, x, THIRST_COLOR, time)\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\n\r\nexport default shellSort\r\n","import {\r\n    CORLOR_RUN,\r\n    PRIMARY_COLOR,\r\n    SECONDARY_COLOR,\r\n    THIRST_COLOR,\r\n} from '../constants'\r\nimport {\r\n    changeColorAnimation,\r\n    finishedSort,\r\n    getValueBar,\r\n    swapContent,\r\n    swapHeight,\r\n} from '../helpers'\r\n\r\nconst selectionSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n    let minIndex = 0\r\n\r\n    for (let i = 0; i < bars.length; i++) {\r\n        minIndex = i\r\n        await changeColorAnimation(bars, i, CORLOR_RUN, time)\r\n\r\n        for (let j = i + 1; j < bars.length; j++) {\r\n            await changeColorAnimation(bars, j, SECONDARY_COLOR, time)\r\n\r\n            const val1 = getValueBar(bars, j)\r\n            const val2 = getValueBar(bars, minIndex)\r\n\r\n            if (val1 < val2) {\r\n                if (minIndex !== i) {\r\n                    await changeColorAnimation(bars, minIndex, PRIMARY_COLOR, time)\r\n                }\r\n                minIndex = j\r\n            } else {\r\n                await changeColorAnimation(bars, j, PRIMARY_COLOR, time)\r\n            }\r\n        }\r\n\r\n        await Promise.all([\r\n            swapHeight(bars, minIndex, i, time),\r\n            swapContent(bars, minIndex, i, time),\r\n            changeColorAnimation(bars, minIndex, PRIMARY_COLOR, time),\r\n            changeColorAnimation(bars, i, THIRST_COLOR, time),\r\n        ])\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\n\r\nexport default selectionSort\r\n","import {\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    PRIMARY_COLOR,\r\n    SECONDARY_COLOR,\r\n    THIRST_COLOR,\r\n    TIME_SPEED,\r\n    YELLOW_COLOR,\r\n} from '../constants'\r\nimport { getValueBar, sleep, swapContentNormal, swapHeightNormal } from '../helpers'\r\n\r\nconst partition = async (arr, start, end, time) => {\r\n    const poviotValues = getValueBar(arr, end)\r\n    let i = start - 1\r\n    arr[end].style.backgroundColor = SECONDARY_COLOR\r\n\r\n    for (let j = start; j < end; j++) {\r\n        const currentBar = getValueBar(arr, j)\r\n\r\n        arr[j].style.backgroundColor = YELLOW_COLOR\r\n        await sleep(time || TIME_SPEED)\r\n\r\n        if (currentBar <= poviotValues) {\r\n            i++\r\n\r\n            swapHeightNormal(arr, i, j)\r\n            swapContentNormal(arr, i, j)\r\n            arr[i].style.backgroundColor = ORANGE_COLOR\r\n\r\n            if (i !== j) {\r\n                arr[j].style.backgroundColor = ORANGE_COLOR\r\n            }\r\n            await sleep(time || TIME_SPEED)\r\n        } else {\r\n            arr[j].style.backgroundColor = PINK_COLOR\r\n        }\r\n    }\r\n    await sleep(time || TIME_SPEED)\r\n\r\n    swapHeightNormal(arr, i + 1, end)\r\n    swapContentNormal(arr, i + 1, end)\r\n\r\n    arr[end].style.background = PINK_COLOR\r\n    arr[i + 1].style.background = THIRST_COLOR\r\n\r\n    await sleep(time || TIME_SPEED)\r\n\r\n    for (let k = 0; k < arr.length; k++) {\r\n        if (arr[k].style.background !== THIRST_COLOR) {\r\n            arr[k].style.background = PRIMARY_COLOR\r\n        }\r\n    }\r\n\r\n    return i + 1\r\n}\r\n\r\nconst quickSort = async (arr, start, end, time) => {\r\n    if (start < end) {\r\n        const position = await partition(arr, start, end, time)\r\n        await Promise.all([\r\n            quickSort(arr, start, position - 1, time),\r\n            quickSort(arr, position + 1, end, time),\r\n        ])\r\n    } else if (start >= 0 && end >= 0 && start < arr.length && end < arr.length) {\r\n        arr[end].style.background = THIRST_COLOR\r\n        arr[start].style.background = THIRST_COLOR\r\n    }\r\n}\r\n\r\nexport default quickSort\r\n","import {\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    THIRST_COLOR,\r\n    TIME_SPEED,\r\n    YELLOW_COLOR,\r\n} from '../constants'\r\nimport { sleep } from '../helpers'\r\n\r\nconst doMerge = async (arr, start, middleIndex, end, time) => {\r\n    const n1 = middleIndex - start + 1\r\n    const n2 = end - middleIndex\r\n\r\n    const L = []\r\n    const R = []\r\n\r\n    for (let i = 0; i < n1; i++) {\r\n        await sleep(time || TIME_SPEED)\r\n        arr[start + i].style.backgroundColor = ORANGE_COLOR\r\n        L[i] = arr[start + i].style.height\r\n    }\r\n\r\n    for (let i = 0; i < n2; i++) {\r\n        await sleep(time || TIME_SPEED)\r\n        arr[middleIndex + 1 + i].style.backgroundColor = YELLOW_COLOR\r\n        R[i] = arr[middleIndex + 1 + i].style.height\r\n    }\r\n\r\n    let i = 0\r\n    let j = 0\r\n    let k = start\r\n\r\n    while (i < n1 && j < n2) {\r\n        if (parseInt(L[i], 10) <= parseInt(R[j], 10)) {\r\n            await sleep(time || TIME_SPEED)\r\n            if (n1 + n2 === arr.length) {\r\n                arr[k].style.backgroundColor = THIRST_COLOR\r\n            } else {\r\n                arr[k].style.backgroundColor = PINK_COLOR\r\n            }\r\n            arr[k].style.height = L[i]\r\n            arr[k].children[0].innerText = parseInt(L[i], 10)\r\n            i++\r\n        } else {\r\n            if (n1 + n2 === arr.length) {\r\n                arr[k].style.backgroundColor = THIRST_COLOR\r\n            } else {\r\n                arr[k].style.backgroundColor = PINK_COLOR\r\n            }\r\n            arr[k].style.height = R[j]\r\n            arr[k].children[0].innerText = parseInt(R[j], 10)\r\n            j++\r\n        }\r\n        k++\r\n    }\r\n\r\n    while (i < n1) {\r\n        await sleep(time || TIME_SPEED)\r\n        if (n1 + n2 === arr.length) {\r\n            arr[k].style.backgroundColor = THIRST_COLOR\r\n        } else {\r\n            arr[k].style.backgroundColor = PINK_COLOR\r\n        }\r\n        arr[k].style.height = L[i]\r\n        arr[k].children[0].innerText = parseInt(L[i], 10)\r\n        i++\r\n        k++\r\n    }\r\n\r\n    while (j < n2) {\r\n        await sleep(time || TIME_SPEED)\r\n        if (n1 + n2 === arr.length) {\r\n            arr[k].style.backgroundColor = THIRST_COLOR\r\n        } else {\r\n            arr[k].style.backgroundColor = PINK_COLOR\r\n        }\r\n        arr[k].style.height = R[j]\r\n        arr[k].children[0].innerText = parseInt(R[j], 10)\r\n        j++\r\n        k++\r\n    }\r\n}\r\n\r\nconst mergeSort = async (arr, start, end, time) => {\r\n    if (start < end) {\r\n        const middleIndex = start + Math.floor((end - start) / 2)\r\n\r\n        await mergeSort(arr, start, middleIndex, time)\r\n        await mergeSort(arr, middleIndex + 1, end, time)\r\n        await doMerge(arr, start, middleIndex, end, time)\r\n    }\r\n}\r\n\r\nexport default mergeSort\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useClickOutside } from '../hooks'\r\nimport ChartIcon from '../assets/img/chart.svg'\r\nimport {\r\n    insertionSort,\r\n    bubbleSort,\r\n    heapSort,\r\n    shellSort,\r\n    selectionSort,\r\n    quickSort,\r\n    mergeSort,\r\n} from '../algorithms'\r\n\r\nimport {\r\n    PRIMARY_COLOR,\r\n    QUICK_SORT,\r\n    HEAP_SORT,\r\n    SELECT_SORT,\r\n    BUBBLE_SORT,\r\n    MERGED_SORT,\r\n    INSERT_SORT,\r\n    SHELL_SORT,\r\n    LIST_ALGORITHM,\r\n    SPEED_SLOW,\r\n    SPEED_NORMAL,\r\n    SPEED_MEDIUM,\r\n    SPEED_FAST,\r\n    SPEED_SUPER_FAST,\r\n    SPEEDS,\r\n    TIME_SPEED_SLOW,\r\n    TIME_SPEED_NORMAL,\r\n    TIME_SPEED_MEDIUM,\r\n    TIME_SPEED_FAST,\r\n    TIME_SPEED_SUPER_FAST,\r\n} from '../constants'\r\nimport { randomIntFromInterval } from '../helpers'\r\nimport { updateArray } from '../redux/slices/setCurrentArray'\r\nimport {\r\n    updateTime,\r\n    setCurrentTimeSpeedSelector,\r\n} from '../redux/slices/setCurrentTimeSpeed'\r\nimport './NavBar.css'\r\n\r\nfunction NavBar() {\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n    const [showSpeed, setShowSpeed] = useState(false)\r\n    const [disable, setDisable] = useState(false)\r\n    const [value, setValue] = useState(10)\r\n    const [typeAlgorithm, setTypeAlgorithm] = useState('')\r\n    const [typeSpeed, setTypeSpeed] = useState('')\r\n\r\n    const currentTimeSpeed = useSelector(setCurrentTimeSpeedSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const dropdownRef = React.useRef()\r\n    const speedRef = React.useRef()\r\n\r\n    const handleShowDropdown = () => {\r\n        setShowDropdown(!showDropdown)\r\n    }\r\n    const handleShowSpeed = () => {\r\n        setShowSpeed(!showSpeed)\r\n    }\r\n    const handleChooseAlgorithm = (type) => {\r\n        if (type === QUICK_SORT) {\r\n            setTypeAlgorithm(QUICK_SORT)\r\n        }\r\n        if (type === MERGED_SORT) {\r\n            setTypeAlgorithm(MERGED_SORT)\r\n        }\r\n        if (type === BUBBLE_SORT) {\r\n            setTypeAlgorithm(BUBBLE_SORT)\r\n        }\r\n        if (type === HEAP_SORT) {\r\n            setTypeAlgorithm(HEAP_SORT)\r\n        }\r\n        if (type === INSERT_SORT) {\r\n            setTypeAlgorithm(INSERT_SORT)\r\n        }\r\n        if (type === SELECT_SORT) {\r\n            setTypeAlgorithm(SELECT_SORT)\r\n        }\r\n        if (type === SHELL_SORT) {\r\n            setTypeAlgorithm(SHELL_SORT)\r\n        }\r\n    }\r\n    const handleChooseSpeed = (type) => {\r\n        if (type === SPEED_SLOW) {\r\n            setTypeSpeed(SPEED_SLOW)\r\n            dispatch(updateTime(TIME_SPEED_SLOW))\r\n        }\r\n        if (type === SPEED_NORMAL) {\r\n            setTypeSpeed(SPEED_NORMAL)\r\n            dispatch(updateTime(TIME_SPEED_NORMAL))\r\n        }\r\n        if (type === SPEED_MEDIUM) {\r\n            setTypeSpeed(SPEED_MEDIUM)\r\n            dispatch(updateTime(TIME_SPEED_MEDIUM))\r\n        }\r\n        if (type === SPEED_FAST) {\r\n            setTypeSpeed(SPEED_FAST)\r\n            dispatch(updateTime(TIME_SPEED_FAST))\r\n        }\r\n        if (type === SPEED_SUPER_FAST) {\r\n            setTypeSpeed(SPEED_SUPER_FAST)\r\n            dispatch(updateTime(TIME_SPEED_SUPER_FAST))\r\n        }\r\n    }\r\n    const onResetColorBar = () => {\r\n        const arr = document.querySelectorAll('.bar')\r\n        for (let k = 0; k < arr.length; k++) {\r\n            arr[k].style.backgroundColor = PRIMARY_COLOR\r\n        }\r\n    }\r\n    const initCurrentBars = () => {\r\n        const array = []\r\n        for (let i = 0; i < Number(value) * 2; i++) {\r\n            array.push(\r\n                randomIntFromInterval(\r\n                    20,\r\n                    Math.floor(document.body.clientHeight / 1.2),\r\n                ),\r\n            )\r\n        }\r\n        return array\r\n    }\r\n    const actionSort = async (type) => {\r\n        onResetColorBar()\r\n        if (!typeSpeed) return\r\n        const bars = document.querySelectorAll('.bar')\r\n        const size = bars.length\r\n        if (type === INSERT_SORT) {\r\n            setDisable(true)\r\n            await insertionSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === SELECT_SORT) {\r\n            setDisable(true)\r\n            await selectionSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === SHELL_SORT) {\r\n            setDisable(true)\r\n            await shellSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === HEAP_SORT) {\r\n            setDisable(true)\r\n            await heapSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === BUBBLE_SORT) {\r\n            setDisable(true)\r\n            await bubbleSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === QUICK_SORT) {\r\n            setDisable(true)\r\n            await quickSort(bars, 0, size - 1, currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === MERGED_SORT) {\r\n            setDisable(true)\r\n            await mergeSort(bars, 0, size - 1, currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n    }\r\n    const resetArray = () => {\r\n        setTypeAlgorithm('')\r\n        setTypeSpeed('')\r\n        const array = initCurrentBars()\r\n        dispatch(updateArray(array))\r\n        const arr = document.querySelectorAll('.bar')\r\n        for (let k = 0; k < arr.length; k++) {\r\n            arr[k].style.backgroundColor = PRIMARY_COLOR\r\n        }\r\n    }\r\n    useClickOutside(dropdownRef, () => setShowDropdown(false))\r\n    useClickOutside(speedRef, () => setShowSpeed(false))\r\n\r\n    useEffect(() => {\r\n        const array = initCurrentBars()\r\n        onResetColorBar()\r\n        dispatch(updateArray(array))\r\n    }, [value])\r\n    return (\r\n        <div className=\"nav-warraper\">\r\n            <div className=\"container\">\r\n                <h1 className=\"logo-container\">\r\n                    <img className=\"chart-icon\" src={ChartIcon} alt=\"ChartIcon\" />\r\n                    Sorting Visualizer\r\n                </h1>\r\n                <div className=\"nav-content\">\r\n                    <div\r\n                        className={`nav-item ${disable ? 'disable' : ''}`}\r\n                        aria-hidden=\"true\"\r\n                        onClick={resetArray}\r\n                    >\r\n                        Reset Array\r\n                    </div>\r\n                    <div className={`nav-item ${disable ? 'disable' : ''}`}>\r\n                        Size\r\n                        <input\r\n                            type=\"range\"\r\n                            value={value}\r\n                            min=\"5\"\r\n                            max=\"100\"\r\n                            step=\"1\"\r\n                            name=\"aize-array\"\r\n                            id=\"size-array\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className={`nav-item ${showDropdown ? 'btn-active' : ''} ${\r\n                            disable ? 'disable' : ''\r\n                        }`}\r\n                        aria-hidden=\"true\"\r\n                        onClick={handleShowDropdown}\r\n                        ref={dropdownRef}\r\n                    >\r\n                        {!typeAlgorithm ? 'Algorithms' : typeAlgorithm}\r\n                        <span\r\n                            className={`caret ${\r\n                                showDropdown ? 'caret-animations' : ''\r\n                            }`}\r\n                        />\r\n                        {showDropdown && (\r\n                            <div className=\"dropdown-menu\">\r\n                                <ul className=\"list-algorithm\">\r\n                                    {LIST_ALGORITHM.map((algorithm) => (\r\n                                        <li\r\n                                            key={algorithm.id}\r\n                                            className=\"algorithm\"\r\n                                            aria-hidden=\"true\"\r\n                                            onClick={() =>\r\n                                                handleChooseAlgorithm(algorithm.type)\r\n                                            }\r\n                                        >\r\n                                            {algorithm.type}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        disable=\"true\"\r\n                        className={`btn ${disable ? 'btn-disabled' : ''}`}\r\n                        onClick={() => actionSort(typeAlgorithm)}\r\n                    >\r\n                        Sort\r\n                    </button>\r\n                    <div\r\n                        className={`nav-item ${showSpeed ? 'btn-active' : ''} ${\r\n                            disable ? 'disable' : ''\r\n                        }`}\r\n                        aria-hidden=\"true\"\r\n                        onClick={handleShowSpeed}\r\n                        ref={speedRef}\r\n                    >\r\n                        {!typeSpeed ? 'Speed' : typeSpeed}\r\n                        <span\r\n                            className={`caret ${\r\n                                showSpeed ? 'caret-animations' : ''\r\n                            }`}\r\n                        />\r\n                        {showSpeed && (\r\n                            <div className=\"dropdown-menu\">\r\n                                <ul className=\"list-algorithm\">\r\n                                    {SPEEDS.map((speed) => (\r\n                                        <li\r\n                                            key={speed.id}\r\n                                            className=\"algorithm\"\r\n                                            aria-hidden=\"true\"\r\n                                            onClick={() =>\r\n                                                handleChooseSpeed(speed.type)\r\n                                            }\r\n                                        >\r\n                                            {speed.type}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export default function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github.174448ba.svg\";","import React from 'react'\r\n\r\nimport GithubIcon from '../assets/img/github.svg'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer-warraper\">\r\n            <div className=\"container\">\r\n                <p className=\"copyright-text\">Copyright &copy; 2021 Anhnh</p>\r\n                <div className=\"group-icon\">\r\n                    <a href=\"https://github.com/hoanganh20012001/sorting-visualizer\">\r\n                        <img className=\"github-icon\" src={GithubIcon} alt=\"\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport SortingVisualier from './components/SortingVisualier'\r\nimport NavBar from './components/NavBar'\r\nimport Footer from './components/Footer'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <NavBar />\r\n            <SortingVisualier />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { store, persistor } from './redux'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <PersistGate persistor={persistor}>\r\n                <App />\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}